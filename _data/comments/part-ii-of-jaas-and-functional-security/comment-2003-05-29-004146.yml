---
id: disqus-comment-608700997
date: '2003-05-29 00:41:46 +0000'
updated: '2003-05-29 00:41:46 +0000'
post_id: "/blog/part-ii-of-jaas-and-functional-security"
name: Les
url: http://216.215.184.5.nw.nuvox.net/
message: <p>OK -- yet more.  I realize that you may know this....but well, I found
  it interesting.  They previous link I posted shows you how to use the <a href="http://disq.us/url?url=http%3A%2F%2Fjava.security%3AnJLtAPDoZvjQwcLw3SelzxMUNI0&amp;cuid=1582918"
  rel="nofollow noopener" title="java.security">java.security</a> infrastructure.  However
  the &lt;a href="<a href="http://disq.us/url?url=http%3A%2F%2Fjava.sun.com%2Fj2se%2F1.4.1%2Fdocs%2Fguide%2Fsecurity%2FPolicyFiles.html%23ChangingDefault%22%3EJDK%3A-MSI1Jj8Sov1GteknELkr8bMCkY&amp;cuid=1582918"
  rel="nofollow noopener" title="http://java.sun.com/j2se/1.4.1/docs/guide/security/PolicyFiles.html#ChangingDefault&amp;quot;&amp;gt;JDK">http://java.sun.com/j2se/1....</a>
  docs&lt;/a&gt; show you how to change the Policy impl.  The policy file is represented
  in memory by (you guessed) an object.  The default implementation uses the static
  policy files.  However, you can implement the abstract class java.security.Policy
  yourself to read from the db or whereever to accomplish your dynamic permissions
  requirements.  <br /><br /></p><p><br /><br />Anyway, you are right, the more I
  have looked into it the more impressed I am with the design.</p>
avatar: "//a.disquscdn.com/1541535443/images/noavatar92.png"
